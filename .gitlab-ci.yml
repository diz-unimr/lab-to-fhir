include:
  - project: "marburg/gitlab-ci-templates"
    file: "/linting-template.yml"
  - project: "marburg/gitlab-ci-templates"
    file: "/build-docker-image-template.yml"
  # - project: "marburg/gitlab-ci-templates"
  #   file: "/gradle-test-template.yml"
  - project: "marburg/gitlab-ci-templates"
    file: "/gradle-integration-test-template.yml"
  - project: "marburg/gitlab-ci-templates"
    file: "/semantic-release-template.yml"
  - project: "marburg/gitlab-ci-templates"
    file: "npm-setup-template.yml"

unit tests:
  image: adoptopenjdk/openjdk11:alpine-slim
  stage: test
  script:
    - ./gradlew test
    - ./gradlew jacocoTestReport
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' build/jacoco/coverage.csv
  artifacts:
    paths:
      - build/jacoco/jacoco.xml
    reports:
      junit: build/test-results/test/TEST-*.xml

test coverage:
  # Must be in a stage later than test-jdk11's stage.
  # The `visualize` stage does not exist by default.
  # Please define it first, or chose an existing stage like `deploy`.
  stage: visualize
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    # convert report from jacoco to cobertura, using relative project path
    - python /opt/cover2cover.py build/jacoco/jacoco.xml $CI_PROJECT_DIR/src/main/java/ > build/cobertura.xml
  needs: ["unit tests"]
  artifacts:
    reports:
      cobertura: build/cobertura.xml

stages:
  - lint
  - build
  - test
  - visualize
  - release
