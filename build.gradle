plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}


group = 'de.unimarburg.diz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
    maven {
        url "https://gitlab.diz.uni-marburg.de/api/v4/projects/149/packages/maven"
        name "gitlab-maven"
        credentials(HttpHeaderCredentials) {
            name = 'Deploy-Token'
            value = 'Cte_Ecvb5QsDGgCznw3S'
        }
        authentication {
            header(HttpHeaderAuthentication)
        }

    }
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest

ext {
    set('springBootVersion', "2.5.5")
    set('springCloudVersion', "2020.0.4")
    set("hapiFhirVersion", "5.5.1")
    set('testContainersVersion', '1.16.0')
}

dependencies {
    // spring cloud stream kafka
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
    implementation "org.springframework.kafka:spring-kafka"

    // metrics
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    implementation "io.micrometer:micrometer-registry-prometheus:1.7.4"
    implementation "io.micrometer:micrometer-core:1.7.4"

    // mapper
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv'

    // hapi fhir
    implementation "ca.uhn.hapi.fhir:org.hl7.fhir.r4:$hapiFhirVersion"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-base:$hapiFhirVersion"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-client:$hapiFhirVersion"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-structures-r4:$hapiFhirVersion"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-structures-r5:$hapiFhirVersion"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-validation:$hapiFhirVersion"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-validation-resources-r4:$hapiFhirVersion"
    implementation 'org.miracum:kafka-fhir-serializer:1.0.1'
    implementation 'de.unimarburg.diz:fhir-pseudonymizer:1.1'

    // unit tests
    testImplementation 'org.springframework.cloud:spring-cloud-stream'
    testImplementation 'org.apache.kafka:kafka-streams-test-utils:2.8.0'

    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.assertj:assertj-core:3.20.2'

    // integration tests
    intTestImplementation 'org.springframework.kafka:spring-kafka-test:2.6.2'
    intTestImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    intTestImplementation "org.testcontainers:kafka:$testContainersVersion"
    intTestImplementation "org.testcontainers:postgresql:$testContainersVersion"
    intTestImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
    intTestImplementation 'org.awaitility:awaitility'
    intTestImplementation 'org.assertj:assertj-core:3.17.2'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

integrationTest {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('jacoco-reports')
}

jacocoTestReport {
    reports {
        csv.required = true
        csv.outputLocation = layout.buildDirectory.file('jacoco/coverage.csv')
        html.outputLocation = layout.buildDirectory.dir('jacoco/html')
    }
}

jar {
    enabled = false
}

bootJar {
    mainClass.set('de.unimarburg.diz.labtofhir.LabToFhirApplication')
}
