spring:
  jmx:
    enabled: true
  kafka:
    bootstrapServers: ${BOOTSTRAP_SERVERS:localhost:9092}
    security.protocol: ${SECURITY_PROTOCOL:PLAINTEXT}
    ssl:
      trust-store-location: file://${SSL_TRUST_STORE_LOCATION_INTERNAL:/opt/lab-to-fhir/ssl/truststore.jks}
      trust-store-password: ${SSL_TRUST_STORE_PASSWORD}
      key-store-location: file://${SSL_KEY_STORE_LOCATION_INTERNAL:/opt/lab-to-fhir/ssl/keystore.jks}
      key-store-password: ${SSL_KEY_STORE_PASSWORD}

  cloud:
    stream:
      function.definition: process
      bindings:
        process-in-0:
          destination: laboratory
        process-in-1:
          destination: loinc
        process-out-0:
          destination: test-fhir-laboratory
      kafka:
        streams:
          binder:
            applicationId: lab-to-fhir
            configuration:
              compression.type: gzip
              max.request.size: 5242880
            replicationFactor: 3

fhir:
  systems:
    serviceRequestId: "https://fhir.diz.uni-marburg.de/sid/lab-service-request-id"
    diagnosticReportId: "https://fhir.diz.uni-marburg.de/sid/lab-report-id"
    observationId: "https://fhir.diz.uni-marburg.de/sid/lab-surrogate-observation-id"
    patientId: "https://fhir.diz.uni-marburg.de/sid/patient-id"
    encounterId: "https://fhir.diz.uni-marburg.de/sid/encounter-id"
    assignerId: "https://www.medizininformatik-initiative.de/fhir/core/NamingSystem/org-identifier"
    assignerCode: "UKMR"
    laboratorySystem: "https://fhir.diz.uni-marburg.de/CodeSystem/swisslab-code"
    laboratoryUnitSystem: "https://fhir.diz.uni-marburg.de/CodeSystem/swisslab-unit"
    labReportMetaSystem: "https://fhir.diz.uni-marbrug.de/CodeSystem/lab-report-meta-code"
  generateNarrative: false

mapping:
  loinc:
    version: "9fa7de13"
    credentials:
      user:
      password:
    proxy:
    local:


services:
  pseudonymizer:
    url: "http://localhost:5000/fhir"

server:
  port: 8080
management:
  endpoints:
    web:
      exposure:
        include: "health, prometheus, info, metric"
  endpoint:
    health:
      show-details: always

logging:
  level:
    org.springframework.kafka.config: info
    de.unimarburg.diz.labtofhir: ${LOG_LEVEL:info}
